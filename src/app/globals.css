@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
  --accent-glow: 59, 130, 246;
  --grid-size: 30px;
}

/* Futuristic background with animated gradient */
body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
    to bottom right,
    rgb(0, 0, 0),
    rgb(2, 6, 23),
    rgb(0, 0, 0)
  );
  background-size: 200% 200%;
  animation: gradientAnimation 15s ease infinite;
  position: relative;
  overflow-x: hidden;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(90deg, rgba(255,255,255,.03) 1px, transparent 1px),
    linear-gradient(rgba(255,255,255,.03) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
  mask-image: radial-gradient(circle at 50% 50%, black, transparent 80%);
  z-index: 0;
  animation: gridAnimation 20s linear infinite;
}

@keyframes gridAnimation {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(calc(var(--grid-size) * 2));
  }
}

@keyframes gradientAnimation {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}

@layer utilities {
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.8s both;
  }
}

/* Enhanced glass card effect */
.glass-card {
  background: rgba(255, 255, 255, 0.03);
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.05);
  border-radius: 1.5rem;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.glass-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.05),
    transparent
  );
  transition: 0.5s;
}

.glass-card:hover::before {
  left: 100%;
}

.glass-card:hover {
  background: rgba(255, 255, 255, 0.05);
  transform: translateY(-4px);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 10px 30px -10px rgba(var(--accent-glow), 0.3),
    0 0 0 1px rgba(var(--accent-glow), 0.1);
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0px);
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

@keyframes pulse-glow {
  0% {
    box-shadow: 0 0 0 0 rgba(var(--accent-glow), 0.2);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(var(--accent-glow), 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(var(--accent-glow), 0);
  }
}

.pulse-glow {
  animation: pulse-glow 2s infinite;
}

/* Typography enhancements */
.prose {
  max-width: 100%;
}

.prose p {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
  line-height: 1.8;
}

.prose-invert {
  color: rgb(209, 213, 219);
}

/* Improved gradient text effect */
.text-gradient {
  background: linear-gradient(to right, #60A5FA, #34D399, #60A5FA);
  background-size: 200% auto;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: gradient 8s linear infinite;
  letter-spacing: -0.025em;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Neon glow effect */
.neon-glow {
  text-shadow: 0 0 10px rgba(var(--accent-glow), 0.5),
               0 0 20px rgba(var(--accent-glow), 0.3),
               0 0 30px rgba(var(--accent-glow), 0.1);
}

/* Animated border */
.animated-border {
  position: relative;
  border-radius: 0.5rem;
}

.animated-border::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, #60A5FA, #34D399, #60A5FA);
  border-radius: 0.6rem;
  z-index: -1;
  animation: borderAnimation 3s linear infinite;
  background-size: 200% 200%;
}

@keyframes borderAnimation {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}

/* Feature card link overrides */
.glass-card h3,
.glass-card p,
.glass-card svg {
  color: inherit !important;
}

.glass-card:hover h3 {
  color: white !important;
}

.glass-card:hover p {
  color: rgb(191, 219, 254) !important; /* text-blue-200 */
}

.glass-card:hover svg {
  color: rgb(96, 165, 250) !important; /* text-blue-400 */
}
